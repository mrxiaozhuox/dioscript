// 初始化 a 为 10
let a = 10;

// 引用链 c -> b -> a
let b = &a;
let c = &b;

// 正确输出应该为 `10 : 10 : 10`
print(a + " : " + b + " : " + c);

b = b + 1;

// 正确输出应该为 `11 : 11 : 11`
print(a + " : " + b + " : " + c);

// 一个新的单独值 (d = 9)
let d = 9;

// 将 b 指向 d，但 a 和 c 不应该受到影响
b = &d;

// 正确输出应该为 `11 : 9 : 11`
print(a + " : " + b + " : " + c);

// 测试在下层 Scope 下的使用情况
if true {

  // 变量 a 下层 Scope 的 Shadow = 99
  let a = 8;
  // 更新 c (其实更新的是上层的a)
  c = 7;

  // 正确输出应该为 `8 : 9 : 7`
  print(a + " : " + b + " : " + c);
}

// 返回外层正确输出应该为 `7 : 9 : 7`
print(a + " : " + b + " : " + c);
